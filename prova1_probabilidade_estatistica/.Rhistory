round(decil, 2)
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
tb <- gerar_tdf(m1=202210000, #201920070
m2=202210000, #201920235
m3=202210000) #201920235
frequencia <- make.fdt(tb$f, start = 10, end = 100)
frequencia
#Amplitude Total
round((max(frequencia$table$f) - min(frequencia$table$f)), 2)
round(amplitudeTotal(max(frequencia$table$f), max(frequencia$table$rf),
max(frequencia$table$`rf(%)`), max(frequencia$table$cf),
max(frequencia$table$`cf(%)`),
min(frequencia$table$f), min(frequencia$table$rf),
min(frequencia$table$`rf(%)`), min(frequencia$table$cf),
min(frequencia$table$`cf(%)`)), 2)
# Variancia
round(var(frequencia), 2)
# Desvio padrao
round(sd(frequencia), 2)
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
tb <- gerar_tdf(m1=201920070,
m2=201920235,
m3=201920235)
frequencia <- make.fdt(tb$f, start = 10, end = 100)
frequencia
#Amplitude Total
round((max(frequencia$table$f) - min(frequencia$table$f)), 2)
round(amplitudeTotal(max(frequencia$table$f), max(frequencia$table$rf),
max(frequencia$table$`rf(%)`), max(frequencia$table$cf),
max(frequencia$table$`cf(%)`),
min(frequencia$table$f), min(frequencia$table$rf),
min(frequencia$table$`rf(%)`), min(frequencia$table$cf),
min(frequencia$table$`cf(%)`)), 2)
# Variancia
round(var(frequencia), 2)
# Desvio padrao
round(sd(frequencia), 2)
# Coeficiente de variacao
round(coeficienteVariacao(frequencia), 2)
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad <- gerar_dados(m1=202210000, #201920070
m2=202210000, #201920235
m3=202210000) #201920235
str(dad)
dadSemOutlier <- remove_outlier(dad)
dadSemOutlier <- remove_outlier(dad)
dadFeminino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'F')
dadMasculino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'M')
dadMasculino <- remove_outlier(dadMasculino)
dadFeminino <- remove_outlier(dadFeminino)
#DataFrames de Covariança
df_cov_masculina <- make_df_cov(dadMasculino)
df_cov_masculina
df_cov_feminino <- make_df_cov(dadFeminino)
df_cov_feminino
#DataFrames de Correlação
df_cor_masculina <- make_df_cor(dadMasculino)
df_cor_masculina
df_cor_feminino <- make_df_cor(dadFeminino)
df_cor_feminino
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad <- gerar_dados(m1=201920070,
m2=201920235,
m3=201920235)
str(dad)
dadSemOutlier <- remove_outlier(dad)
dadSemOutlier <- remove_outlier(dad)
dadFeminino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'F')
dadMasculino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'M')
dadMasculino <- remove_outlier(dadMasculino)
dadFeminino <- remove_outlier(dadFeminino)
#DataFrames de Covariança
df_cov_masculina <- make_df_cov(dadMasculino)
df_cov_masculina
df_cov_feminino <- make_df_cov(dadFeminino)
df_cov_feminino
#DataFrames de Correlação
df_cor_masculina <- make_df_cor(dadMasculino)
df_cor_masculina
df_cor_feminino <- make_df_cor(dadFeminino)
df_cor_feminino
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad <- gerar_dados(m1=202210000, #201920070
m2=202210000, #201920235
m3=202210000) #201920235
dadSemOutlier <- remove_outlier(dad)
dadSemOutlier <- remove_outlier(dad)
dadFeminino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'F')
dadMasculino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'M')
dadMasculino <- remove_outlier(dadMasculino)
dadFeminino <- remove_outlier(dadFeminino)
plot(dadMasculino$Y1, dadMasculino$Y2, pch=20, main = "Masculino",
xlab = "Y1", ylab = "Y2")
plot(dadFeminino$Y1, dadFeminino$Y2, pch=20, main = "Feminino",
xlab = "Y1", ylab = "Y2")
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1))
plot(dadMasculino$Y1, dadMasculino$Y2, pch=20, main = "Masculino",
xlab = "Y1", ylab = "Y2")
plot(dadFeminino$Y1, dadFeminino$Y2, pch=20, main = "Feminino",
xlab = "Y1", ylab = "Y2")
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad <- gerar_dados(m1=201920070,
m2=201920235,
m3=201920235)
dadSemOutlier <- remove_outlier(dad)
dadSemOutlier <- remove_outlier(dad)
dadFeminino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'F')
dadMasculino <- subset(dadSemOutlier, dadSemOutlier$Sexo == 'M')
dadMasculino <- remove_outlier(dadMasculino)
dadFeminino <- remove_outlier(dadFeminino)
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1))
plot(dadMasculino$Y1, dadMasculino$Y2, pch=20, main = "Masculino",
xlab = "Y1", ylab = "Y2")
plot(dadFeminino$Y1, dadFeminino$Y2, pch=20, main = "Feminino",
xlab = "Y1", ylab = "Y2")
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
dad_rl # DataFrame
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
# Polinomio de grau 1
funcaoAfim = lm(y ~ x)
summary(funcaoAfim)
tabelaFuncaoAfim = summary(funcaoAfim)$coefficients
round(tabelaFuncaoAfim, 2)
# Polinomio de grau 2
funcaoQuadratica = lm(y ~ x + I(x^2))
summary(funcaoQuadratica)
tabelaFuncaoQuadratica = summary(funcaoQuadratica)$coefficients
round(tabelaFuncaoQuadratica, 2)
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(1.5, 14, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 0.6)
text(1.5, 13, expression(r^2 == 0.9888), cex = 0.6)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de II grau")
text(1.5, 14, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.6)
text(1.5, 13, expression(r^2 == 0.9959), cex = 0.6)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(1.5, 14, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 0.6)
text(1.5, 13, expression(r^2 == 0.9888), cex = 0.6)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(1.5, 14, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.6)
text(1.5, 13, expression(r^2 == 0.9959), cex = 0.6)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(1.5, 14, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 0.6)
text(1.5, 13, expression(r^2 == 0.9888), cex = 0.6)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(1.5, 14, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.6)
text(1.5, 13, expression(r^2 == 0.9959), cex = 0.6)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(1.5, 14, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 0.8)
text(1.5, 13, expression(r^2 == 0.9888), cex = 0.8)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(1.5, 14, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.8)
text(1.5, 13, expression(r^2 == 0.9959), cex = 0.8)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(3, 13.7, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 1)
text(1.5, 12, expression(r^2 == 0.9888), cex = 1)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(3.6, 13.7, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.8)
text(1.5, 12, expression(r^2 == 0.9959), cex = 1)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(3, 13.7, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 1)
text(2, 12, expression(r^2 == 0.9888), cex = 1)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(3.6, 13.7, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.8)
text(2, 12, expression(r^2 == 0.9959), cex = 1)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(2, 13.7, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 1)
text(2, 12, expression(r^2 == 0.9888), cex = 1)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(2, 13.7, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.8)
text(2, 12, expression(r^2 == 0.9959), cex = 1)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(2, 13.7, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 0.8)
text(2, 12, expression(r^2 == 0.9888), cex = 1)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(2, 13.7, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.8)
text(2, 12, expression(r^2 == 0.9959), cex = 1)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(3, 13.7, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 1)
text(1.5, 12, expression(r^2 == 0.9888), cex = 1)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de II grau")
text(3.6, 13.7, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.8)
text(1.5, 12, expression(r^2 == 0.9959), cex = 1)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
path = paste(getwd(),"/funcoesProva.R", sep="")
source(path)
dad_rl <- gerar_dados_rl(m1=201920070,
m2=201920235,
m3=201920235)
# x e y para realizar operacoes com funcoes
x = dad_rl$X
y = dad_rl$Y
par(mfrow = c(1, 2), oma = c(4, 1, 1, 1)) # Dois plot, uma tela
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoX_afim = cbind(1, x)
eixoX_quadratico = cbind(1, x, x^2)
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
eixoY = cbind(y)
# Parte da funcao Afim >>>>>>>>>>>>
X_linha_vezes_X_afim = t(eixoX_afim) %*% eixoX_afim
X_linha_vezes_X_inverso_afim = solve(X_linha_vezes_X_afim)
X_linha_vezes_Y_afim = t(eixoX_afim) %*% eixoY
beta_estimado_afim = X_linha_vezes_X_inverso_afim %*% X_linha_vezes_Y_afim
Y_estimado_afim =  eixoX_afim %*% beta_estimado_afim
resultado_afim = eixoY - Y_estimado_afim
# Parte da funcaoquadratica >>>>>>>
X_linha_vezes_X_quadratico = t(eixoX_quadratico) %*% eixoX_quadratico
X_linha_vezes_X_inverso_quadratico = solve(X_linha_vezes_X_quadratico)
X_linha_vezes_Y_quadratico = t(eixoX_quadratico) %*% eixoY
beta_estimado_quadratico = X_linha_vezes_X_inverso_quadratico %*% X_linha_vezes_Y_quadratico
Y_estimado_quadratico =  eixoX_quadratico %*% beta_estimado_quadratico
resultado_quadratico = eixoY - Y_estimado_quadratico
# A
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "A: Polinomio de I grau")
text(3, 13.7, expression(hat(Y) == 1.2245 + 1.3191*X), cex = 1)
text(1.5, 12, expression(r^2 == 0.9888), cex = 1)
lines(spline(Y_estimado_afim ~ x, n = 1e3), col = 'red')
# B
plot(y ~ x, pch = 20, xlim = c(0, 10), ylim = c(0, 14), col = "blue",
xlab = "x", ylab = "y", main = "B: Polinomio de II grau")
text(3.6, 13.7, expression(hat(Y) == 1.1410 + 2.0734*X - 0.0958*X^2), cex = 0.8)
text(1.5, 12, expression(r^2 == 0.9959), cex = 1)
lines(spline(Y_estimado_quadratico ~ x, n = 1e3), col = 'red')
